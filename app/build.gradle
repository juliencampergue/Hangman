plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // Protobuf for Proto DataStore
    id 'com.google.protobuf' version '0.8.17'
    // Kotlin Annotation Processor
    id 'kotlin-kapt'
}

android {
    namespace 'com.hangman.android'
    compileSdk 33

    defaultConfig {
        applicationId "com.hangman.android"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile new File(rootProject.STORES_DIR, rootProject.HANGMAN_STORE_NAME)
            storePassword rootProject.HANGMAN_STORE_PASSWORD
            keyAlias rootProject.HANGMAN_KEY_ALIAS
            keyPassword rootProject.HANGMAN_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*
     * Compose added to be able to build...
     * https://stackoverflow.com/questions/70712741/android-jetpack-compose-java-lang-nosuchmethoderror-no-virtual-method-setcont
     */
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.1'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    /*
     * --------------
     * Tooling dependencies
     * --------------
     */
    // Compose Previews
    debugImplementation "androidx.compose.ui:ui-tooling:1.3.2"
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.2"

    /*
     * --------------
     * Implementation dependencies
     * --------------
     */
    // Kotlin
    implementation 'androidx.core:core-ktx:1.9.0'

    // Android UI
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0' // Added to fix a duplicate viewmodel error on build otherwise (for a similar issue, see https://stackoverflow.com/questions/69817925/problem-duplicate-class-androidx-lifecycle-viewmodel-found-in-modules)
    implementation 'androidx.compose.compiler:compiler:1.3.1' // Added to be able to build... https://stackoverflow.com/questions/70712741/android-jetpack-compose-java-lang-nosuchmethoderror-no-virtual-method-setcont
    implementation 'androidx.compose.runtime:runtime:1.3.1' // Added to be able to build... https://stackoverflow.com/questions/66409744/the-compose-compiler-plugin-you-are-using-version-1-0-0-alpha13-expects-a-mini
    // Ui components
    implementation "androidx.compose.material:material:1.3.1"
    implementation "androidx.compose.ui:ui:1.3.1"
    implementation "androidx.compose.material3:material3-window-size-class:1.0.1" // Added to use WindowSize classes to know if screen is compact/extended/etc...
    // To use @Preview annotations
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.1"

    // Coroutines & Flows
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.2'

    // Proto / Datastore
    implementation 'androidx.datastore:datastore:1.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.18.0'

    // Room
    implementation 'androidx.room:room-ktx:2.4.3'
    kapt 'androidx.room:room-compiler:2.4.3' // Kotlin Annotation Processing Tool (kapt)
//    ksp 'androidx.room:room-compiler:2.4.3' // Kotlin Symbol Processing
    // Paging
    implementation 'androidx.paging:paging-common-ktx:3.1.1'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    //Firebase
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.1.0')
    // Firebase Auth
    implementation 'com.google.firebase:firebase-auth-ktx'
    // Firebase Database
    implementation 'com.google.firebase:firebase-database-ktx'

    // Navigation & Compose
    // For Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.5.3"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:2.5.3"
    // As this dependency to be able to use liveData with compose states
    implementation "androidx.compose.runtime:runtime-livedata:1.3.1"

    /*
     * --------------
     * Test dependencies
     * --------------
     */
    testImplementation 'junit:junit:4.13.2'
    // Add Test Dispatchers for coroutines and Flow unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    // Use kotlin reflection capabilities inside unit tests
    testImplementation "org.jetbrains.kotlin:kotlin-reflect"
    // Mockito
    testImplementation 'org.mockito:mockito-core:2.28.1'

    // Robelectric
    // Use Robolectric to handle the usage of Android framework inside tests.
    // Especially useful for UI, even if non necessary, but also for external APIs calling
    // non-mocked android methods (ie: Firebase calling TextUtils for exemple).
    testImplementation "org.robolectric:robolectric:4.8.1"

    /*
     * --------------
     * Android Test dependencies
     * --------------
     */
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Room
    androidTestImplementation 'androidx.room:room-testing:2.4.3'
    kaptAndroidTest 'androidx.room:room-compiler:2.4.3' // Used to process kotlin annotations in android test code (use kaptTest for unit tests) (https://stackoverflow.com/questions/37926188/how-to-use-kapt-in-androidtest-scope)

    // Mockito
    /*
     * INFO
     * When using mockito on instrumented tests,
     * we need to use dexmaker-mockito in order to be able to mock interfaces
     * and classes into an Android dex. Otherwise, mockito just tells us
     * that it cannot mock class/interface because it's private or final (even though
     * it might not be). No other mockito dependency is required for instrumented tests.
     */
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.1'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker:2.28.1'

    // Coroutines
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    // Use kotlin reflection capabilities inside unit tests
    androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect"

    // To add the instantExecutor for tests implementing LiveDatas to be executed on the main Thread
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:2.5.3"
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.4"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

// For Firebase
apply plugin: 'com.google.gms.google-services'